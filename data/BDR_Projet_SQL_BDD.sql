-- MySQL Script generated by MySQL Workbench
-- Fri Dec 18 11:39:35 2020
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

-- -----------------------------------------------------
-- Auteurs : Zwick Gaétan, Maziero Marco, Ngueukam Karel
-- Description : Script de création du schéma, création
--      des triggers, des vues, des procédures
--      stockées et insertion de données préliminaires
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema BDR_Projet
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS BDR_Projet ;

-- -----------------------------------------------------
-- Schema BDR_Projet
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS BDR_Projet DEFAULT CHARACTER SET utf8mb4 ;
USE BDR_Projet ;

-- -----------------------------------------------------
-- Table Personne
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS Personne (
  id INT AUTO_INCREMENT,
  nom VARCHAR(50) NOT NULL,
  prenom VARCHAR(50) NOT NULL,
  dateNaissance DATE NULL,
  sexe ENUM('homme', 'femme', 'autre') NULL,
  photoProfil VARCHAR(512) NULL,
  CONSTRAINT PK_Personne PRIMARY KEY (id))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table Doubleur
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS Doubleur (
  idPersonne INT,
  CONSTRAINT PK_Doubleur PRIMARY KEY (idPersonne),
  CONSTRAINT FK_Doubleur_idPersonne
    FOREIGN KEY (idPersonne)
    REFERENCES Personne (id)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table Utilisateur
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS Utilisateur (
  email VARCHAR(256) NOT NULL,
  pseudo VARCHAR(60) NOT NULL,
  password VARCHAR(256) NOT NULL,
  idPersonne INT,
  UNIQUE INDEX UC_Utilisateur_email (email),
  UNIQUE INDEX UC_Utilisateur_pseudo (pseudo),
  CONSTRAINT PK_Utilisateur PRIMARY KEY (idPersonne),
  CONSTRAINT FK_Utilisateur_idPersonne
    FOREIGN KEY (idPersonne)
    REFERENCES Personne (id)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table Moderateur
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS Moderateur (
  idPersonne INT,
  CONSTRAINT PK_Moderateur PRIMARY KEY (idPersonne),
  CONSTRAINT FK_Moderateur_idPersonne
    FOREIGN KEY (idPersonne)
    REFERENCES Utilisateur (idPersonne)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table StudioAnimation
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS StudioAnimation (
  id INT AUTO_INCREMENT,
  nom VARCHAR(100) NOT NULL,
  description TEXT NULL,
  logo VARCHAR(512) NULL,
  CONSTRAINT PK_StudioAnimation PRIMARY KEY (id))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table Media
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS Media (
  id INT AUTO_INCREMENT,
  titre VARCHAR(45) NOT NULL,
  description TEXT NULL,
  duree INT NULL,
  image VARCHAR(512) NULL,
  idStudioAnimation INT NOT NULL,
  CONSTRAINT PK_Media PRIMARY KEY (id),
  INDEX FK_Media_idStudioAnimation (idStudioAnimation),
  CONSTRAINT FK_Media_idStudioAnimation
    FOREIGN KEY (idStudioAnimation)
    REFERENCES StudioAnimation (id)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table Categorie
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS Categorie (
  tag VARCHAR(50),
  CONSTRAINT PK_Categorie PRIMARY KEY (tag))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table Film
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS Film (
  dateSortie DATE NOT NULL,
  idMedia INT,
  CONSTRAINT PK_Film PRIMARY KEY (idMedia),
  CONSTRAINT FK_Film_idMedia
    FOREIGN KEY (idMedia)
    REFERENCES Media (id)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table Serie
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS Serie (
  idMedia INT,
  CONSTRAINT PK_Serie PRIMARY KEY (idMedia),
  CONSTRAINT FK_Serie_idMedia
    FOREIGN KEY (idMedia)
    REFERENCES Media (id)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table Saison
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS Saison (
  num INT,
  idSerie INT,
  nbEpisodes INT NULL,
  dateSortie DATE NOT NULL,
  CONSTRAINT PK_Saison PRIMARY KEY (num, idSerie),
  INDEX FK_Saison_idMedia (idSerie),
  CONSTRAINT FK_Saison_idMedia
    FOREIGN KEY (idSerie)
    REFERENCES Serie (idMedia)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table Utilisateur_Media_Commentaire
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS Utilisateur_Media_Commentaire (
  idPersonne INT,
  idMedia INT,
  dateAjout DATETIME,
  commentaire TEXT NOT NULL,
  CONSTRAINT PK_UtilisateurMediaCommentaire PRIMARY KEY (idPersonne, idMedia, dateAjout),
  INDEX FK_UtilisateurMediaCommentaire_idMedia (idMedia),
  INDEX FK_UtilisateurMediaCommentaire_idPersonne (idPersonne),
  CONSTRAINT FK_UtilisateurMediaCommentaire_idPersonne
    FOREIGN KEY (idPersonne)
    REFERENCES Utilisateur (idPersonne)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT FK_UtilisateurMediaCommentaire_idMedia
    FOREIGN KEY (idMedia)
    REFERENCES Media (id)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table Utilisateur_Media_Note
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS Utilisateur_Media_Note (
  idPersonne INT,
  idMedia INT,
  note INT NOT NULL CHECK (note BETWEEN 1 AND 10),
  dateNote DATETIME NOT NULL,
  CONSTRAINT PK_UtilisateurMediaNote PRIMARY KEY (idPersonne, idMedia),
  INDEX FK_UtilisateurMediaNote_idMedia (idMedia),
  INDEX FK_UtilisateurMediaNote_idPersonne (idPersonne),
  CONSTRAINT FK_EtilisateurMediaNote_idPersonne
    FOREIGN KEY (idPersonne)
    REFERENCES Utilisateur (idPersonne)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT FK_UtilisateurMediaNote_idMedia
    FOREIGN KEY (idMedia)
    REFERENCES Media (id)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table Utilisateur_Film
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS Utilisateur_Film (
  idPersonne INT,
  idMedia INT,
  nom ENUM('Plan to watch', 'Finished') NOT NULL,
  dateAjout DATETIME NOT NULL,
  CONSTRAINT PK_UtilisateurFilm PRIMARY KEY (idPersonne, idMedia),
  INDEX FK_UtilisateurFilm_idMedia (idMedia),
  INDEX FK_UtilisateurFilm_idPersonne (idPersonne),
  CONSTRAINT FK_UtilisateurFilm_idPersonne
    FOREIGN KEY (idPersonne)
    REFERENCES Utilisateur (idPersonne)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT FK_UtilisateurFilm_idMedia
    FOREIGN KEY (idMedia)
    REFERENCES Film (idMedia)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table Utilisateur_Saison
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS Utilisateur_Saison (
  idPersonne INT,
  numSaison INT,
  idMedia INT,
  nom ENUM('Plan to watch', 'Watching', 'Finished', 'Dropped') NOT NULL,
  dateAjout DATETIME NOT NULL,
  nbEpisodesVus INT NOT NULL,
  CONSTRAINT PK_UtilisateurSaison PRIMARY KEY (idPersonne, numSaison, idMedia),
  INDEX FK_UtilisateurSaison_numSaison_idMedia (numSaison, idMedia),
  INDEX FK_UtilisateurSaison_idPersonne (idPersonne),
  CONSTRAINT FK_UtilisateurSaison_idPersonne
    FOREIGN KEY (idPersonne)
    REFERENCES Utilisateur (idPersonne)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT FK_UtilisateurSaison_numSaison_idMedia
    FOREIGN KEY (numSaison , idMedia)
    REFERENCES Saison (num , idSerie)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table Media_Categorie
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS Media_Categorie (
  tagCategorie VARCHAR(50),
  idMedia INT,
  CONSTRAINT PK_MediaCategorie PRIMARY KEY (tagCategorie, idMedia),
  INDEX FK_MediaCategorie_idMedia (idMedia),
  INDEX FK_MediaCategorie_tagCategorie (tagCategorie),
  CONSTRAINT FK_MediaCategorie_tagCategorie
    FOREIGN KEY (tagCategorie)
    REFERENCES Categorie (tag)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT FK_MediaCategorie_idMedia
    FOREIGN KEY (idMedia)
    REFERENCES Media (id)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table Doubleur_Media
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS Doubleur_Media (
  idPersonne INT,
  idMedia INT,
  CONSTRAINT PK_DoubleurMedia PRIMARY KEY (idPersonne, idMedia),
  INDEX FK_DoubleurMedia_idMedia (idMedia),
  INDEX FK_DoubleurMedia_idDoubleur (idPersonne),
  CONSTRAINT FK_DoubleurMedia_idPersonne
    FOREIGN KEY (idPersonne)
    REFERENCES Doubleur (idPersonne)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT FK_DoubleurMedia_idMedia
    FOREIGN KEY (idMedia)
    REFERENCES Media (id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;